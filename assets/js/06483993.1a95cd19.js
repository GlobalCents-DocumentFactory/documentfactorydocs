"use strict";(self.webpackChunkdocumentfactorydocs=self.webpackChunkdocumentfactorydocs||[]).push([[6993],{1243:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var t=s(4848),i=s(8453),r=(s(8774),s(530));const o={sidebar_position:1,title:"DocumentFactory Config (.env)"},c="Configuration",l={id:"configuration/df_configuration",title:"DocumentFactory Config (.env)",description:"DocumentFactory relies on a configuration file named .env located in the Installation Directory, which is specified",source:"@site/docs/configuration/df_configuration.mdx",sourceDirName:"configuration",slug:"/configuration/df_configuration",permalink:"/documentfactorydocs/docs/configuration/df_configuration",draft:!1,unlisted:!1,editUrl:"https://github.com/GlobalCents-DocumentFactory/documentfactorydocs/tree/main/docs/configuration/df_configuration.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"DocumentFactory Config (.env)"},sidebar:"tutorialSidebar",previous:{title:"Configuration",permalink:"/documentfactorydocs/docs/category/configuration"},next:{title:"Pipeline Actions",permalink:"/documentfactorydocs/docs/category/pipeline-actions"}},a={},d=[];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"configuration",children:"Configuration"})}),"\n",(0,t.jsxs)(n.p,{children:["DocumentFactory relies on a configuration file named ",(0,t.jsx)(n.code,{children:".env"})," located in the ",(0,t.jsx)(n.strong,{children:"Installation Directory"}),", which is specified\nduring the ",(0,t.jsx)(n.a,{href:"../getting-started/setup#installation-overview",children:(0,t.jsx)(n.strong,{children:"installation process"})})," (referred to as ",(0,t.jsx)(n.strong,{children:"Select the Installation Location"}),").\nThis file defines essential runtime parameters that control the behavior of various components such as workflow processing,\nobject storage, and messaging."]}),"\n",(0,t.jsx)(r.A,{src:"setup/config_win_env_location.png",alt:"DF config location",maxWidth:"600px"}),"\n",(0,t.jsx)(n.p,{children:"It follows the standard dotenv format, where each line defines a key-value pair. Below is a sample .env file with\ndefault parameter values:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-env",metastring:'title=".env"',children:'DOTNET_ENVIRONMENT="Production"\n\nPTFD_MAX_CONCURRENTWORKFLOWS=20\nPTFD_MAX_CONCURRENTTASKS=40\nPTFD_TASKS_SECONDSTIMEOUT=600\nPTFD_WORKFLOWS_SECONDSTIMEOUT=6000\n\nS3_SERVER_START=false\nS3_HOSTPORT=":9000"\nS3_CONSOLEHOSTPORT=":9001"\nS3_ROOT_USER="documentfactory"\nS3_ROOT_PASSWORD="secretpassword"\n\nMINIO_USE_MINIO=false\nMINIO_URL=localhost:9000\nMINIO_USE_SSL=false\nMINIO_REGION="us-east-1"\n\nNATS_SERVER_START=true\nNATS_URL="nats://127.0.0.1:4222"\nNATS_PUBLICKEY="UAWEEECHAJZUZGOOOI6N5TDJK7ZHXYG5IW2SZ6KK7EVHAXAK64RC4ICR"\nNATS_PRIVATEKEY="SUAMCB5PRHKKQ44QS674C3UDVUHF2RTPTT2JM3KW4KMDKLYVMN2XQNQYVQ"\nNATS_SERVERNAME="nats-server"\nNATS_INMEMORY=true\nNATS_SERVER_ROOTFS="C:\\\\DocFactory\\\\DocFactoryData"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Configuration sections:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Environment"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"DOTNET_ENVIRONMENT"})," specifies the environment in which DocumentFactory is running (e.g., Development, Staging, or Production).\nIt affects configuration loading, logging levels, and component behavior at runtime.\nIn most cases, this option should be left at its default value unless there is a specific need to change the deployment environment."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Workflow Processing Settings"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PTFD_MAX_CONCURRENTWORKFLOWS"})," - defines the maximum number of ",(0,t.jsx)(n.a,{href:"../getting-started/terminology_and_concepts#workflow",children:(0,t.jsx)(n.strong,{children:"workflows"})}),"  that can be processed in parallel.\nHigher values may improve throughput but require more system resources."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PTFD_MAX_CONCURRENTTASKS"})," - sets the maximum number of concurrent ",(0,t.jsx)(n.a,{href:"../getting-started/terminology_and_concepts#task",children:(0,t.jsx)(n.strong,{children:"tasks"})}),"  across all workflows.\nUseful for controlling system load when tasks are resource-intensive."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PTFD_TASKS_SECONDSTIMEOUT"})," - specifies the maximum time (in seconds) a single task is allowed to run before being terminated."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"PTFD_WORKFLOWS_SECONDSTIMEOUT"})," - defines the timeout (in seconds) for an entire workflow.\nEnsures stuck or long-running workflows do not block the system indefinitely."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"MinIO Integration:"})," If using ",(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/minio",children:(0,t.jsx)(n.strong,{children:"MinIO"})})," as an external object store, configure its connection parameters here."]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"S3_SERVER_START"})," \u2013 Enables or disables the embedded S3-compatible server. Set to true to start the server automatically with DocumentFactory."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"S3_HOSTPORT"})," \u2013 The network address (host and port) the S3 server will bind to (e.g., :9000 for all interfaces on port 9000)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"S3_CONSOLEHOSTPORT"})," \u2013 The address for accessing the MinIO web-based console (e.g., :9001)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"S3_ROOT_USER"})," \u2013 Specifies the root access key used to authenticate requests to the built-in S3-compatible server.\nSee ",(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/minio#minio-access-keys",children:(0,t.jsx)(n.strong,{children:"How to Generate Access Keys"})})," for instructions on creating access credentials."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"S3_ROOT_PASSWORD"})," \u2013 Defines the root secret key associated with the access key above. It is used to securely sign\nrequests and must be kept confidential. Refer to ",(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/minio#minio-access-keys",children:(0,t.jsx)(n.strong,{children:"How to Generate Access Keys"})}),"\nfor the generation process."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MINIO_USE_MINIO"})," \u2013 Enables or disables the use of MinIO as the object storage backend. Set to true to activate MinIO integration."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MINIO_URL"})," \u2013 The endpoint address where the MinIO server is running (e.g., localhost:9000)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MINIO_USE_SSL"})," \u2013 Set to true if MinIO is configured to use HTTPS; otherwise, set to false for plain HTTP."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"MINIO_REGION"})," \u2013 Defines the region for MinIO. While MinIO accepts any region string, the default is typically ",(0,t.jsx)(n.em,{children:'"us-east-1"'}),".\nThis value may be important for compatibility with S3 clients or services expecting a region tag."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{title:"TODO",type:"note",children:(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"S3_SERVER_EXEFULLPATHNAME - add description"}),"\n",(0,t.jsx)(n.li,{children:"S3_SERVER_CONFIGFILE - add description"}),"\n",(0,t.jsx)(n.li,{children:"S3_SERVER_DATADIR - add description"}),"\n",(0,t.jsx)(n.li,{children:"S3_SERVER_LOGSFILE - add description"}),"\n"]})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/nats",children:(0,t.jsx)(n.strong,{children:"NATS"})})," Messaging:"]})," Controls whether a NATS server\nshould be started with DocumentFactory and how to connect to it.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_SERVER_START"})," \u2013 If set to ",(0,t.jsx)(n.code,{children:"true"}),", DocumentFactory automatically starts an embedded NATS server on launch."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_URL"})," \u2013 The address used to connect to the NATS server (typically nats://localhost:4222)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_PUBLICKEY"})," - The public NKey used to identify the client to the NATS server. It is included in the authentication\nprocess and is matched against the server\u2019s list of allowed keys to determine access permissions (e.g., publish, subscribe).\nThese should be generated using the nk tool. For more details, see the (",(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/nats#nats-keys",children:(0,t.jsx)(n.strong,{children:"key generation instructions"})}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_PRIVATEKEY"})," \u2013 The private NKey seed used to cryptographically sign authentication challenges issued by the NATS server.\nThis proves the client owns the corresponding public key without exposing the private key itself.\nThis key is highly sensitive and must be kept secret. For more details, see the (",(0,t.jsx)(n.a,{href:"../external-%D1%81omponents/nats#nats-keys",children:(0,t.jsx)(n.strong,{children:"key generation instructions"})}),")."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_SERVERNAME"})," \u2013 The expected server name for identity verification."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_INMEMORY"})," \u2013 Determines the storage backend for NATS JetStream. If set to true, document processing state and message streams\nare stored in memory using MemoryStorage. If set to false, the client uses file-based storage (FileStorage), persisting data to disk.\nThis setting influences performance and durability trade-offs."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"NATS_SERVER_ROOTFS"})," \u2013 The directory path used by the NATS server to store persistent data when not using in-memory mode."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},530:(e,n,s)=>{s.d(n,{A:()=>r});s(6540);var t=s(6025),i=s(4848);function r(e){let{src:n,alt:s,width:r="100%",maxWidth:o="600px"}=e;return(0,i.jsx)("img",{src:(0,t.Ay)(`/img/${n}`),alt:s,style:{display:"block",margin:"auto",width:r,maxWidth:o}})}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(6540);const i={},r=t.createContext(i);function o(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);