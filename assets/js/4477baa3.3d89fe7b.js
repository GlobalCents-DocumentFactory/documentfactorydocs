"use strict";(self.webpackChunkdocumentfactorydocs=self.webpackChunkdocumentfactorydocs||[]).push([[3382],{424:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var r=t(4848),s=t(8453),o=t(8774);t(1470),t(9365);const i={sidebar_position:3,toc_min_heading_level:2,toc_max_heading_level:5},l="Merge",c={id:"pipeline/merge",title:"Merge",description:"The merging stage combines multiple documents or input sources into a single logical unit. This is commonly used",source:"@site/docs/pipeline/merge.mdx",sourceDirName:"pipeline",slug:"/pipeline/merge",permalink:"/documentfactorydocs/docs/pipeline/merge",draft:!1,unlisted:!1,editUrl:"https://github.com/GlobalCents-DocumentFactory/documentfactorydocs/tree/main/docs/pipeline/merge.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"tutorialSidebar",previous:{title:"Convert",permalink:"/documentfactorydocs/docs/pipeline/convert"},next:{title:"Compress",permalink:"/documentfactorydocs/docs/pipeline/compress"}},a={},d=[{value:"Properties",id:"properties",level:2},{value:"<code>merge</code>",id:"merge-1",level:2},{value:"<code>mergesettings</code>",id:"mergesettings",level:3},{value:"<code>settingswordmerge</code>",id:"settingswordmerge",level:4},{value:"<code>sectionstart</code>",id:"sectionstart",level:5},{value:"<code>columnset</code>",id:"columnset",level:5},{value:"<code>linebetweencols</code>",id:"linebetweencols",level:5}];function u(e){const n={admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"merge",children:"Merge"})}),"\n",(0,r.jsx)(n.p,{children:"The merging stage combines multiple documents or input sources into a single logical unit. This is commonly used\nto group related files\u2014such as cover pages, attachments, and main content\u2014into one cohesive and structured dataset.\nThe merge behavior is defined within the pipeline configuration and can be customized to fit specific workflow requirements."}),"\n",(0,r.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,r.jsx)(n.h2,{id:"merge-1",children:(0,r.jsx)(n.code,{children:"merge"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"boolean"})]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"merge"})," setting enables the document merging feature within the processing pipeline.\nBy setting this property to ",(0,r.jsx)(n.code,{children:"true"}),", the system will combine multiple input documents into a single output file during execution.\nSet this property to ",(0,r.jsx)(n.code,{children:"false"})," if you prefer to process each original document individually, and create a separate output\ndocument for each original document."]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"Enabling merging in the pipeline does not automatically convert input documents to a single file format before\nthey are combined. Merging documents of different types (for example, PDF and Word) may lead to processing errors.\nIt is recommended to convert all input documents to a common file type (such as PDF) before the merge stage.\nThis pre-processing step helps prevent compatibility issues and ensures consistent output."})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-json",metastring:'title="pipeline.json"',children:'{\n    "processors": [\n        {\n            "actionconvert": true,\n            "settingsconvert": {\n                "saveformat": "pdf"\n            }\n        }\n    ],\n    "merge": true\n}\n'})}),"\n",(0,r.jsx)(n.p,{children:"In the example above:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"actionconvert"})," property is enabled, triggering the conversion step in the processing pipeline."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"settingsconvert"})," block specifies that all input documents should be converted to PDF format."]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"merge"})," option is set to ",(0,r.jsx)(n.code,{children:"true"}),", instructing the system to combine the converted documents into a single output file."]}),"\n",(0,r.jsx)(n.li,{children:"This configuration is suitable for handling input files in various formats which will first be converted to PDF before being merged."}),"\n"]}),"\n",(0,r.jsxs)(n.p,{children:["By default, when using the ",(0,r.jsx)(n.strong,{children:"Console Client"}),", the resulting merged document takes the name of the directory containing\nthe input documents. If multiple directories are involved, the name of the first directory is used as the output file name."]}),"\n",(0,r.jsxs)(n.p,{children:["When using the ",(0,r.jsx)(n.strong,{children:"Web Client"}),", the resulting merged document is, by default, named after the first input document\nand can be changed during the download process."]}),"\n",(0,r.jsx)(n.h3,{id:"mergesettings",children:(0,r.jsx)(n.code,{children:"mergesettings"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"object"})]}),"\n",(0,r.jsxs)(n.p,{children:["Additionally, the ",(0,r.jsx)(n.code,{children:"mergesettings"})," object provides detailed configuration options for the merge process. This is an\nextension that allows for more granular control over how the merge is carried out."]}),"\n",(0,r.jsxs)(n.p,{children:["The ",(0,r.jsx)(n.code,{children:"mergesettings"})," object may include:"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(o.A,{to:"#settingswordmerge",children:(0,r.jsx)(n.code,{children:"settingswordmerge"})})," - configuration of the merging process for Word documents merging only."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"settingswordmerge",children:(0,r.jsx)(n.code,{children:"settingswordmerge"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"object"})]}),"\n",(0,r.jsx)(n.p,{children:"The section provides further choices for flexible configuration of the merging process for Word documents merging only:"}),"\n",(0,r.jsx)(n.h5,{id:"sectionstart",children:(0,r.jsx)(n.code,{children:"sectionstart"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"string"})]}),"\n",(0,r.jsx)(n.p,{children:"Defines where a new section should begin within the document.\nThe possible values for this property are:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"Continuous"})}),": The new section starts immediately after the previous one, without any page breaks."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"NewPage"})}),": The new section starts at the top of the next page."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"NewColumn"})}),": The new section begins at the top of the next column."]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"columnset",children:(0,r.jsx)(n.code,{children:"columnset"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"string"})]}),"\n",(0,r.jsx)(n.p,{children:"Specifies the column layout for the document. The possible values for this property include:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"none"})}),": The section will have a single-column layout."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.em,{children:(0,r.jsx)(n.strong,{children:"twocols"})}),": Allows for the appending of columns from one page to the columns on the next page."]}),"\n"]}),"\n",(0,r.jsx)(n.h5,{id:"linebetweencols",children:(0,r.jsx)(n.code,{children:"linebetweencols"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.em,{children:"Type:"})," ",(0,r.jsx)("code",{style:{color:"#0066cc"},children:"boolean"})]}),"\n",(0,r.jsxs)(n.p,{children:["Indicates whether a vertical line should be drawn between columns in a multi-column layout.\nIf set to ",(0,r.jsx)(n.code,{children:"true"}),", a vertical line will appear between columns. Set this property to ",(0,r.jsx)(n.code,{children:"false"})," to disables the line."]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>i});t(6540);var r=t(4164);const s={tabItem:"tabItem_Ymn6"};var o=t(4848);function i(e){let{children:n,hidden:t,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,r.A)(s.tabItem,i),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>w});var r=t(6540),s=t(4164),o=t(3104),i=t(6347),l=t(205),c=t(7485),a=t(1682),d=t(679);function u(e){return r.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,r.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function h(e){const{values:n,children:t}=e;return(0,r.useMemo)((()=>{const e=n??function(e){return u(e).map((e=>{let{props:{value:n,label:t,attributes:r,default:s}}=e;return{value:n,label:t,attributes:r,default:s}}))}(t);return function(e){const n=(0,a.XI)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function m(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function p(e){let{queryString:n=!1,groupId:t}=e;const s=(0,i.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,c.aZ)(o),(0,r.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(s.location.search);n.set(o,e),s.replace({...s.location,search:n.toString()})}),[o,s])]}function g(e){const{defaultValue:n,queryString:t=!1,groupId:s}=e,o=h(e),[i,c]=(0,r.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const r=t.find((e=>e.default))??t[0];if(!r)throw new Error("Unexpected error: 0 tabValues");return r.value}({defaultValue:n,tabValues:o}))),[a,u]=p({queryString:t,groupId:s}),[g,f]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[s,o]=(0,d.Dv)(t);return[s,(0,r.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:s}),x=(()=>{const e=a??g;return m({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{x&&c(x)}),[x]);return{selectedValue:i,selectValue:(0,r.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);c(e),u(e),f(e)}),[u,f,o]),tabValues:o}}var f=t(2303);const x={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=t(4848);function j(e){let{className:n,block:t,selectedValue:r,selectValue:i,tabValues:l}=e;const c=[],{blockElementScrollPositionUntilNextRender:a}=(0,o.a_)(),d=e=>{const n=e.currentTarget,t=c.indexOf(n),s=l[t].value;s!==r&&(a(n),i(s))},u=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;n=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;n=c[t]??c[c.length-1];break}}n?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.A)("tabs",{"tabs--block":t},n),children:l.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,b.jsx)("li",{role:"tab",tabIndex:r===n?0:-1,"aria-selected":r===n,ref:e=>c.push(e),onKeyDown:u,onClick:d,...o,className:(0,s.A)("tabs__item",x.tabItem,o?.className,{"tabs__item--active":r===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:o}=e;const i=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=i.find((e=>e.props.value===o));return e?(0,r.cloneElement)(e,{className:(0,s.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:i.map(((e,n)=>(0,r.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function y(e){const n=g(e);return(0,b.jsxs)("div",{className:(0,s.A)("tabs-container",x.tabList),children:[(0,b.jsx)(j,{...n,...e}),(0,b.jsx)(v,{...n,...e})]})}function w(e){const n=(0,f.A)();return(0,b.jsx)(y,{...e,children:u(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);