"use strict";(self.webpackChunkdocumentfactorydocs=self.webpackChunkdocumentfactorydocs||[]).push([[9064],{8491:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var i=t(4848),o=t(8453);const r={sidebar_position:1,title:"Overview"},s="Overview",c={id:"pipeline/overview",title:"Overview",description:"Pipeline Actions define the individual processing steps that are applied to documents within a configured pipeline.",source:"@site/docs/pipeline/overview.mdx",sourceDirName:"pipeline",slug:"/pipeline/overview",permalink:"/documentfactorydocs/docs/pipeline/overview",draft:!1,unlisted:!1,editUrl:"https://github.com/GlobalCents-DocumentFactory/documentfactorydocs/tree/main/docs/pipeline/overview.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,title:"Overview"},sidebar:"tutorialSidebar",previous:{title:"Pipeline Actions",permalink:"/documentfactorydocs/docs/category/pipeline-actions"},next:{title:"Convert",permalink:"/documentfactorydocs/docs/pipeline/convert"}},a={},d=[];function l(e){const n={code:"code",h1:"h1",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"Pipeline Actions"})," define the individual processing steps that are applied to documents within a configured pipeline.\nEach action corresponds to a specific task\u2014such as format conversion, Optical Character Recognition (OCR), watermarking,\nor file compression\u2014and determines how a document is transformed as it moves through the processing workflow."]}),"\n",(0,i.jsx)(n.p,{children:"Actions are grouped under two main arrays in the pipeline configuration:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"processors"})," \u2013 the primary actions executed during the main processing phase."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"postprocessors"})," \u2013 the actions performed after the core processing is complete, typically used for final enhancements\nor output adjustments."]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Each action is enabled using a dedicated flag (e.g., ",(0,i.jsx)(n.code,{children:"actionconvert"}),") and can be supplemented with a corresponding\nconfiguration object (e.g., ",(0,i.jsx)(n.code,{children:"actionconvert"}),") for more granular control over how the action behaves."]}),"\n",(0,i.jsxs)(n.p,{children:["In addition to these actions, the pipeline may also include a ",(0,i.jsx)(n.code,{children:"merge"})," directive, which determines whether multiple input\ndocuments should be combined into a single output file before postprocessing. This allows for advanced document composition\nand batch processing scenarios."]}),"\n",(0,i.jsx)(n.p,{children:"Together, these components enable the creation of flexible, automated, and reusable workflows that can handle diverse\ndocument processing requirements with consistency and efficiency."})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);