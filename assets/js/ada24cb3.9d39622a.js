"use strict";(self.webpackChunkdocumentfactorydocs=self.webpackChunkdocumentfactorydocs||[]).push([[1411],{1796:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>t,default:()=>x,frontMatter:()=>c,metadata:()=>d,toc:()=>h});var s=i(4848),o=i(8453),l=i(530),r=i(8774);const c={sidebar_position:2,title:"Console Client"},t="Console Client",d={id:"client_tools/console_client",title:"Console Client",description:"dfclient is a console application designed to interact with DocumentFactory. It can be installed as a background service",source:"@site/docs/client_tools/console_client.mdx",sourceDirName:"client_tools",slug:"/client_tools/console_client",permalink:"/documentfactorydocs/docs/client_tools/console_client",draft:!1,unlisted:!1,editUrl:"https://github.com/GlobalCents-DocumentFactory/documentfactorydocs/tree/main/docs/client_tools/console_client.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"Console Client"},sidebar:"tutorialSidebar",previous:{title:"Web Client",permalink:"/documentfactorydocs/docs/client_tools/web_client"},next:{title:"External Components",permalink:"/documentfactorydocs/docs/category/external-components"}},a={},h=[{value:"Available Commands and Syntax",id:"available-commands-and-syntax",level:2},{value:"<code>help</code>",id:"help",level:3},{value:"<code>install</code>",id:"install",level:3},{value:"<code>uninstall</code>",id:"uninstall",level:3},{value:"<code>run</code>",id:"run",level:3},{value:"<code>process</code>",id:"process",level:3},{value:"<code>processfolders</code>",id:"processfolders",level:3},{value:"<code>completion</code>",id:"completion",level:3},{value:"Configuration Files",id:"configuration-files",level:2},{value:"folderswatch.json",id:"folderswatchjson",level:3},{value:"dfclient.env",id:"dfclientenv",level:3},{value:"pipeline.json",id:"pipelinejson",level:3}];function p(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"console-client",children:"Console Client"})}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"dfclient"})," is a console application designed to interact with DocumentFactory. It can be installed as a background service\nor used manually to process documents and folders through the command line interface."]}),"\n",(0,s.jsxs)(n.p,{children:["It is automatically unpacked during the installation of DocumentFactory and does not require separate installation.\nThe executable is placed in the Data Directory, which is specified by the user during the ",(0,s.jsx)(n.strong,{children:"Select the Data Directory"})," step\nof the DocumentFactory ",(0,s.jsx)(n.a,{href:"../getting-started/setup#installation-overview",children:(0,s.jsx)(n.strong,{children:"installation process"})}),". This directory also\ncontains additional configuration files required for processing, which will be covered in this section."]}),"\n",(0,s.jsx)(l.A,{src:"clients/client_win_dfclient_location.png",alt:"Installation License Agreement",maxWidth:"600px"}),"\n",(0,s.jsx)(n.p,{children:"In addition to local installation, dfclient can also be used on a client machine to interact remotely with the DocumentFactory server.\nIn this case, the server address must be specified in the configuration file, which will be described later in this section."}),"\n",(0,s.jsx)(n.h2,{id:"available-commands-and-syntax",children:"Available Commands and Syntax"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient [command] [flags]\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"[command] \u2014  specifies the operation to perform"}),"\n",(0,s.jsx)(n.li,{children:"[flags] \u2014 optional parameters such as --config or --help"}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Available commands:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#help",children:(0,s.jsx)(n.code,{children:"help"})})," - Displays help for a specific command or general usage information"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#install",children:(0,s.jsx)(n.code,{children:"install"})})," - Installs the DocumentFactory client as a service"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#uninstall",children:(0,s.jsx)(n.code,{children:"uninstall"})})," - Uninstalls the DocumentFactory client service"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#run",children:(0,s.jsx)(n.code,{children:"run"})})," - Runs the client as a background service"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#process",children:(0,s.jsx)(n.code,{children:"process"})})," - Processes a single document or a batch of documents"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#processfolders",children:(0,s.jsx)(n.code,{children:"processfolders"})})," - Processes each individual folder in a folder hierarchy"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(r.A,{to:"#completion",children:(0,s.jsx)(n.code,{children:"completion"})})," - Generates an autocompletion script for supported shells"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"help",children:(0,s.jsx)(n.code,{children:"help"})}),"\n",(0,s.jsx)(n.p,{children:"Detailed usage instructions, flags, and command-specific options are available through the --help flag:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient --help\n#OR\ndfclient [command] --help\n"})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient process --help\n"})}),"\n",(0,s.jsx)(n.p,{children:"Provides documentation on how the process command should be used, including available options and required parameters."}),"\n",(0,s.jsx)(n.h3,{id:"install",children:(0,s.jsx)(n.code,{children:"install"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"install"})," command registers the ",(0,s.jsx)(n.strong,{children:"dfclient"})," application as a system service.\nOnce installed, the service can run in the background to process documents and folders based on the specified configuration."]}),"\n",(0,s.jsx)(n.p,{children:"This command is supported on both Windows and Linux platforms.\nOn Windows, it registers the service with the Service Control Manager.\nOn Linux, it typically installs the service as a systemd unit."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Administrative or root privileges are required to perform this operation."})}),"\n",(0,s.jsx)(n.p,{children:"Syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient install [flags]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Flags:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--config"})," - (Optional) Path to a configuration file specifying server connection parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"})," - Displays usage information for the run command"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Notes",type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["By default, if no configuration file is explicitly specified via the ",(0,s.jsx)(n.code,{children:"--config"})," flag, the application attempts to load\nconfiguration from the dfclient.env file located in the same directory as the executable."]}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient install --config C:\\config\\dfclient.env\n"})}),"\n",(0,s.jsx)(n.p,{children:"After installation, the service is registered and can be started using standard OS service management tools:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Windows"}),": via the Services console or net start ",(0,s.jsx)(n.strong,{children:"dfclient"})]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Linux"}),": via systemctl start ",(0,s.jsx)(n.strong,{children:"dfclient"})]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["When the service is running, document processing is performed automatically based on configuration file settings.\nFor details on configuring server connection, monitored paths, and processing rules, refer to the\n",(0,s.jsx)(r.A,{to:"#configuration-files",children:"Configuration Files"})," section."]}),"\n",(0,s.jsxs)(n.p,{children:["For environments without persistent service use, it is also possible to run ",(0,s.jsx)(n.strong,{children:"dfclient"})," manually via the ",(0,s.jsx)(r.A,{to:"#run",children:(0,s.jsx)(n.code,{children:"run"})})," command."]}),"\n",(0,s.jsx)(n.h3,{id:"uninstall",children:(0,s.jsx)(n.code,{children:"uninstall"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"uninstall"})," command removes the system service named GCI DocumentFactory Client.\nThis command unregisters the service from the operating system, making it no longer available for background execution."]}),"\n",(0,s.jsx)(n.p,{children:"Supported on both Windows and Linux platforms."}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsx)(n.p,{children:"Administrative or root privileges are required to perform this operation."})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient uninstall\n"})}),"\n",(0,s.jsx)(n.h3,{id:"run",children:(0,s.jsx)(n.code,{children:"run"})}),"\n",(0,s.jsx)(n.p,{children:"The run command starts the dfclient application in the foreground as a regular process, without registering it as a system service.\nThis mode is intended for manual execution, testing, or environments where running as a service is not required or feasible."}),"\n",(0,s.jsx)(n.p,{children:"While running, the application performs document processing based on the current configuration."}),"\n",(0,s.jsx)(n.p,{children:"Syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient run [flags]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Flags:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--config"})," - (Optional) Path to a configuration file specifying server connection parameters"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"})," - Displays usage information for the run command"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"To stop the process, use standard interrupt signals (e.g., Ctrl+C)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["By default, if no configuration file is explicitly specified via the ",(0,s.jsx)(n.code,{children:"--config"})," flag, the application attempts to load\nconfiguration from the dfclient.env file located in the same directory as the executable."]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient run --config C:\\config\\dfclient.env\n"})}),"\n",(0,s.jsx)(n.h3,{id:"process",children:(0,s.jsx)(n.code,{children:"process"})}),"\n",(0,s.jsx)(n.p,{children:"The process command initiates a one-time processing operation for a single document or a batch of documents.\nThis command does not require running the service and is intended for ad-hoc or manual executions."}),"\n",(0,s.jsx)(n.p,{children:"Syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient process [flags]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Flags:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-i"}),", ",(0,s.jsx)(n.code,{children:"--input"})," - Path to the document or folder to be processed (required)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-o"}),", ",(0,s.jsx)(n.code,{children:"--output"})," - Path to the output folder where processed results will be saved"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-e"}),", ",(0,s.jsx)(n.code,{children:"--error"})," - Path to the error folder where failed documents will be moved"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-p"}),", ",(0,s.jsx)(n.code,{children:"--pipeline"})," - Path to the pipeline definition file (default: pipeline.json)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-m"}),", ",(0,s.jsx)(n.code,{children:"--maxlevel"})," - Maximum recursion depth for folder processing (default: 3)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-w"}),", ",(0,s.jsx)(n.code,{children:"--watch"})," - Whether to watch the pipeline status after submission (default: true)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"})," - Displays help for the process command"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--config"})," - (Optional) Path to a configuration file specifying server connection parameters"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Notes",type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["By default, if no configuration file is explicitly specified via the ",(0,s.jsx)(n.code,{children:"--config"})," flag, the application attempts to load\nconfiguration from the dfclient.env file located in the same directory as the executable."]}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient process -i ./input -o ./output -e ./error -p pipeline.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"processfolders",children:(0,s.jsx)(n.code,{children:"processfolders"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"processfolders"})," command performs recursive traversal of a directory tree and submits each encountered folder for\nindividual document processing. Each folder is treated as a separate processing unit and processed according\nto the specified pipeline definition."]}),"\n",(0,s.jsx)(n.p,{children:"This command is useful in scenarios where documents are organized into folder-based batches, such as by client, project, or date."}),"\n",(0,s.jsx)(n.p,{children:"Syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient processfolders [flags]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Flags:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-i"}),", ",(0,s.jsx)(n.code,{children:"--input"})," - Path to the folder hierarchy to be processed (required)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-o"}),", ",(0,s.jsx)(n.code,{children:"--output"})," - (Unused) This flag is accepted but has no effect; output is created alongside each input folder"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-p"}),", ",(0,s.jsx)(n.code,{children:"--pipeline"})," - Path to the pipeline definition file (default: pipeline.json)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-w"}),", ",(0,s.jsx)(n.code,{children:"--watch"})," - Whether to monitor pipeline status after submission (default: true)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"})," - Displays help for the ",(0,s.jsx)(n.code,{children:"processfolders"})," command"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"--config"})," - (Optional) Path to a configuration file specifying server connection parameters"]}),"\n"]}),"\n",(0,s.jsx)(n.admonition,{title:"Notes",type:"note",children:(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"--input"})," parameter must point to a directory. All immediate subfolders (and optionally deeper, if supported) are\nprocessed individually."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Output for each folder is created as a sibling to the folder being processed, not in a centralized output directory."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["By default, if no configuration file is explicitly specified via the ",(0,s.jsx)(n.code,{children:"--config"})," flag, the application attempts to load\nconfiguration from the ",(0,s.jsx)(n.code,{children:"dfclient.env"})," file located in the same directory as the executable."]}),"\n"]}),"\n"]})}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient processfolders -i ./input -p ./pipeline/default.json\n"})}),"\n",(0,s.jsx)(n.h3,{id:"completion",children:(0,s.jsx)(n.code,{children:"completion"})}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.code,{children:"completion"})," command generates an autocompletion script for the ",(0,s.jsx)(n.code,{children:"dfclient"})," console application for a specified shell environment.\nThe generated script enhances the user experience by providing tab-completion for commands, flags, and arguments in supported shells."]}),"\n",(0,s.jsxs)(n.p,{children:["Each supported shell has a dedicated subcommand, and detailed usage instructions are available via the corresponding ",(0,s.jsx)(n.code,{children:"--help"})," option."]}),"\n",(0,s.jsx)(n.p,{children:"Syntax:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient completion [shell]\n"})}),"\n",(0,s.jsx)(n.p,{children:"Supported Shells:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"bash"})," - Generates autocompletion script for Bash"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"zsh"})," - Generates autocompletion script for Zsh"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"fish"})," - Generates autocompletion script for Fish"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"powershell"})," - Generates autocompletion script for PowerShell"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Flags:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"-h"}),", ",(0,s.jsx)(n.code,{children:"--help"})," - Displays help for the completion command"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient completion powershell | Out-String | Invoke-Expression\n"})}),"\n",(0,s.jsx)(n.p,{children:"Loads completion in your current shell session"}),"\n",(0,s.jsxs)(n.admonition,{title:"Notes",type:"note",children:[(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"For shell-specific instructions on how to load the script, run:"}),"\n"]}),(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"dfclient completion [shell] --help\n"})}),(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Autocompletion must be enabled in the shell configuration for the script to take effect (e.g., ~/.bashrc, ~/.zshrc)."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"These scripts are typically used in interactive environments and are not required for scripted or service-based usage."}),"\n"]}),"\n"]})]}),"\n",(0,s.jsx)(n.h2,{id:"configuration-files",children:"Configuration Files"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.strong,{children:"Data Directory"}),", specified by the user during the ",(0,s.jsx)(n.strong,{children:"Select the Data Directory step"})," of the DocumentFactory installation process,\ncontains not only the ",(0,s.jsx)(n.code,{children:"dfclient"})," executable but also several configuration files necessary for proper operation and document processing."]}),"\n",(0,s.jsx)(n.p,{children:"The primary configuration files located in this directory include:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"folderswatch.json"})," \u2014 contains configuration settings that define how folders are monitored and managed during document processing."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"dfclient.env"})," \u2014 contains environment variables and server connection settings used by dfclient."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"pipeline.json"})," \u2014 specifies the processing pipeline configuration, detailing the sequence of operations applied to documents."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Further details and usage examples for each configuration file are provided in the sections below."}),"\n",(0,s.jsx)(n.h3,{id:"folderswatchjson",children:"folderswatch.json"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"folderswatch.json"})," file contains configuration settings that control how the service monitors and processes\ndocument folders. It defines one or more folder configurations specifying the input directories to watch, where\nto place processed and error documents, the processing pipeline to apply, and other related settings."]}),"\n",(0,s.jsx)(n.p,{children:"Structure example:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-json",children:'{\n  "folderConfigs": [\n    {\n      "input": "C:\\\\temp\\\\input",\n      "output": "C:\\\\temp\\\\output",\n      "error": "C:\\\\temp\\\\error",\n      "pipeline": "pipeline.json",\n      "maxLevel": 1,\n      "debounceTimeMillis": 1000\n    }\n  ]\n}\n'})}),"\n",(0,s.jsx)(n.p,{children:"Field descriptions:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"folderConfigs"})," \u2014 an array of folder configuration objects. Each object defines settings for one folder monitoring task."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"input"})," \u2014 path to the directory that the service monitors for new documents or subfolders to process."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"output"})," \u2014 path where successfully processed documents are saved."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"error"})," \u2014 path where documents that failed processing are moved."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"pipeline"})," \u2014 path to the pipeline definition file that specifies the processing steps to be applied to documents in the corresponding input folder."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"maxLevel"})," \u2014 (optional) the maximum recursion depth when processing subfolders within the input directory."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"debounceTimeMillis"})," \u2014 (optional) the delay time in milliseconds used to debounce file system events, preventing multiple triggers on rapid changes."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This configuration allows flexible setup for multiple folder monitoring workflows, enabling the service to watch\ndifferent input locations and process documents according to specific pipelines and handling rules."}),"\n",(0,s.jsx)(n.h3,{id:"dfclientenv",children:"dfclient.env"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"dfclient.env"})," file is an environment configuration file used by ",(0,s.jsx)(n.code,{children:"dfclient"})," to define runtime settings, including\nserver connection parameters and other environment-specific options. It follows the standard ",(0,s.jsx)(n.code,{children:"dotenv"})," format, where each\nline defines a key-value pair."]}),"\n",(0,s.jsxs)(n.p,{children:["When no configuration file is explicitly provided via the --config flag, ",(0,s.jsx)(n.strong,{children:"dfclient"})," attempts to load ",(0,s.jsx)(n.code,{children:"dfclient.env"}),"\nfrom the same directory where the executable resides."]}),"\n",(0,s.jsx)(n.p,{children:"Example structure:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-console",children:"NATS_URL=nats://localhost:4222\nNATS_PUBLICKEY=UAWEEECHAJZUZGOOOI6N5TDJK7ZHXYG5IW2SZ6KK7EVHAXAK64RC4ICR\nNATS_PRIVATEKEY=SUAMCB5PRHKKQ44QS674C3UDVUHF2RTPTT2JM3KW4KMDKLYVMN2XQNQYVQ\nNATS_SERVERNAME=nats-server\nNATS_MAX_PENDING=10000\nNATS_INMEMORY=false\n\nMAX_THREADS=12\n\nMINIO_USE_MINIO=false\nMINIO_URL=localhost:9000\nMINIO_ACCESSKEY=documentfactory\nMINIO_SECRETKEY=secretpassword\nMINIO_REGION=us-east-1\n\nLOG_LEVEL=debug\nLOG_FOLDER=logs\nLOG_FORMAT=text\nLOG_STDOUT=true\n"})}),"\n",(0,s.jsx)(n.p,{children:"Common configuration sections:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.a,{href:"../external-%D1%81omponents/nats",children:(0,s.jsx)("u",{children:(0,s.jsx)(n.strong,{children:"NATS"})})})," messaging settings"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NATS_URL"})," \u2013 Connection URL for the NATS server."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NATS_PUBLICKEY"}),", ",(0,s.jsx)(n.code,{children:"NATS_PRIVATEKEY"})," \u2013 NKey credentials used to authenticate the client with the NATS server.\nThese keys can be generated using official NATS tools.\nSee ",(0,s.jsx)(n.a,{href:"../external-%D1%81omponents/nats#nats-keys",children:(0,s.jsx)(n.strong,{children:"How to Generate Access Keys"})})," for instructions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NATS_SERVERNAME"})," \u2013 The expected server name for identity verification."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NATS_MAX_PENDING"})," \u2013 The maximum number of pending messages allowed."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"NATS_INMEMORY"})," \u2013 Determines the storage backend for NATS JetStream. If set to true, document processing state and message streams\nare stored in memory using MemoryStorage.If set to false, the client uses file-based storage (FileStorage), persisting data to disk.\nThis setting influences performance and durability trade-offs."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Processing configuration"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MAX_THREADS"})," \u2013 defines the maximum number of processing threads used by the client."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsxs)(n.strong,{children:[(0,s.jsx)(n.a,{href:"../external-%D1%81omponents/minio",children:(0,s.jsx)("u",{children:(0,s.jsx)(n.strong,{children:"MinIO"})})})," integration"]})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MINIO_USE_MINIO"})," \u2013 enables or disables MinIO integration."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MINIO_URL"})," \u2013 endpoint for MinIO service."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MINIO_ACCESSKEY"}),", ",(0,s.jsx)(n.code,{children:"MINIO_SECRETKEY"})," \u2013 credentials for accessing the MinIO storage.Keys can be generated via the MinIO Console.\nSee ",(0,s.jsx)(n.a,{href:"../external-%D1%81omponents/minio#minio-access-keys",children:(0,s.jsx)(n.strong,{children:"How to Generate Access Keys"})})," for instructions."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MINIO_REGION"})," \u2013 region configuration for S3-compatible APIs."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Logging"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LOG_LEVEL"})," \u2013 sets the log verbosity level (",(0,s.jsx)(n.em,{children:"debug"}),", ",(0,s.jsx)(n.em,{children:"info"}),", ",(0,s.jsx)(n.em,{children:"warn"}),", ",(0,s.jsx)(n.em,{children:"error"}),", ",(0,s.jsx)(n.em,{children:"fatal"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LOG_FOLDER"})," \u2013 directory where log files are saved."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LOG_FORMAT"})," \u2013 format of logs (",(0,s.jsx)(n.em,{children:"text"}),", ",(0,s.jsx)(n.em,{children:"logfmt"})," or ",(0,s.jsx)(n.em,{children:"json"}),")."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"LOG_STDOUT"})," \u2013 whether to also print logs to the console."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"This file centralizes all runtime configuration required for standalone or service-based execution, enabling flexible deployment and simplified management."}),"\n",(0,s.jsx)(n.h3,{id:"pipelinejson",children:"pipeline.json"}),"\n",(0,s.jsxs)(n.p,{children:["The ",(0,s.jsx)(n.em,{children:"pipeline.json"})," file defines a sequence of processing steps that dfclient sends to DocumentFactory to be applied\nto the input documents."]}),"\n",(0,s.jsxs)(n.p,{children:["For detailed information about the pipeline structure, refer to the ",(0,s.jsx)(n.a,{href:"../category/pipeline-actions",children:(0,s.jsx)(n.strong,{children:"Pipeline Actions"})})," section."]})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},530:(e,n,i)=>{i.d(n,{A:()=>l});i(6540);var s=i(6025),o=i(4848);function l(e){let{src:n,alt:i,width:l="100%",maxWidth:r="600px"}=e;return(0,o.jsx)("img",{src:(0,s.Ay)(`/img/${n}`),alt:i,style:{display:"block",margin:"auto",width:l,maxWidth:r}})}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const o={},l=s.createContext(o);function r(e){const n=s.useContext(l);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),s.createElement(l.Provider,{value:n},e.children)}}}]);